# Define la plataforma mínima para tu proyecto iOS
platform :ios, '13.0'

# Desactiva las estadísticas de CocoaPods para mejorar la velocidad
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Especifica el proyecto Xcode y sus configuraciones
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Obtiene la ruta de Flutter
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

# Incluye las configuraciones de Flutter para CocoaPods
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Configuración de Pods para la aplicación
target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Instala todos los Pods requeridos por Flutter
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # Configuración específica para pruebas
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# Configuraciones adicionales después de la instalación
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    # Asegura que nanopb se compila correctamente
    if target.name == 'nanopb'
      target.build_configurations.each do |config|
        config.build_settings['OTHER_CFLAGS'] = '-DPB_FIELD_32BIT=1'
      end
    end
  end
end
